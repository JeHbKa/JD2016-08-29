1: package by.it.tsiamruk.jd01_15;
2: 
3: import java.io.*;
4: import java.util.regex.Matcher;
5: import java.util.regex.Pattern;
6: 
7: 
8: public class TaskB {
9: 
10:     static String filePath(){
11:         String src = System.getProperty();    
12:         src = src.concat();   
13:         return src + ;
14:     }
15: 
16: 
17:     static StringBuilder readToStringBuilder() {
18:         String src = System.getProperty();    
19:         src = src.concat();   
20:         String fn = src + ;    
21: 
22:         
23:         StringBuilder sb = new StringBuilder();
24: 
25:         try (BufferedReader bufferedReader = new BufferedReader(new FileReader(fn))) {
26:             String line;
27:             while ((line = bufferedReader.readLine()) != null) {
28:                 sb.append(line).append();
29:             }
30:             
31:         } catch (FileNotFoundException e) {
32:             System.out.println();
33:         } catch (IOException e) {
34:             System.out.println();
35:             e.printStackTrace();
36:         }
37:         
38: 
39:         Pattern p = Pattern.compile((?:\\\\\\\\[^\\\)|(?s)");
40:         Matcher m = p.matcher(sb);
41:         int pos = 0;
42:         while (m.find(pos)) {
43:             sb.delete(m.start(), m.end());
44:             pos = m.start();
45:         }
46: 
47:         
48: 
49:         return sb;
50:     }
51: 
52:     static StringBuilder indexator(StringBuilder sb) {
53:         StringBuilder res = new StringBuilder();
54:         int n = 1;
55:         int i = 0;
56:         while (i < sb.length()) {
57:             int start = i;
58:             int end = sb.indexOf(, start);
59:             res.append(n).append().append(sb.substring(start, end)).append();
60:             n++;
61:             i = end + 1;
62:         }
63:         return res;
64:     }
65: 
66:     static void consolePrint(StringBuilder sb){
67:         System.out.println(sb);
68:     }
69: 
70:     static void filePrint(String filePath, StringBuilder sb){
71:         try(PrintWriter pw = new PrintWriter(new FileWriter(filePath))) {
72:             pw.print(sb);
73:         } catch (IOException e) {
74:             System.out.print();
75:             e.printStackTrace();
76:         }
77:     }
78: }
